# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: Tools/Uploader/lib/master.proto

require 'google/protobuf'

Google::Protobuf::DescriptorPool.generated_pool.build do
  add_message "Master.PbxHeader" do
    map :int_index, :int32, :int32, 1
    map :string_index, :string, :int32, 2
  end
  add_message "Master.PresentCommand" do
    optional :emerald, :int32, 1
    optional :gold, :int32, 2
    optional :scale, :int32, 3
    repeated :stack_items, :message, 4, "Master.PresentCommand.StackItem"
    repeated :cards, :message, 5, "Master.PresentCommand.Fang"
    repeated :arms, :message, 6, "Master.PresentCommand.Armament"
  end
  add_message "Master.PresentCommand.StackItem" do
    optional :id, :int32, 1
    optional :num, :int32, 2
  end
  add_message "Master.PresentCommand.Fang" do
    optional :card_id, :int32, 1
    optional :level, :int32, 2
    optional :num, :int32, 3
  end
  add_message "Master.PresentCommand.Armament" do
    optional :arm_id, :int32, 1
    optional :level, :int32, 2
    optional :fixed_hp, :int32, 3
    optional :fixed_attack, :int32, 4
    optional :fixed_defense, :int32, 5
    optional :soul_id0, :int32, 6
    optional :soul_level0, :int32, 7
    optional :slot_num, :int32, 8
    optional :num, :int32, 9
  end
  add_message "Master.FangTemplate" do
    optional :id, :int32, 1
    optional :name, :string, 2
    optional :rarity, :int32, 3
    optional :growth_type, :int32, 4
    optional :enemy_no, :int32, 5
    optional :property, :string, 6
    optional :brave_guage, :int32, 7
    optional :base_hp, :int32, 8
    optional :base_attack, :int32, 9
    optional :base_defense, :int32, 10
    optional :max_level, :int32, 11
    optional :max_hp, :int32, 12
    optional :max_attack, :int32, 13
    optional :max_defense, :int32, 14
    optional :burst_hp_rate, :int32, 15
    optional :skill_id, :int32, 16
    optional :pskill_id, :int32, 17
    optional :pvp_skill_id, :int32, 18
    optional :pvp_soul_id, :int32, 19
    optional :gold, :int32, 20
    optional :plus_exp, :int32, 21
    optional :serif, :string, 22
    optional :cost, :int32, 23
    optional :burst_cost, :int32, 24
    optional :unuse, :bool, 25
    repeated :limit_break_type, :string, 26
    optional :limit_break_item, :int32, 27
    optional :default_plus_hp, :int32, 28
    optional :default_plus_attack, :int32, 29
    optional :default_plus_defense, :int32, 30
    optional :special_text, :string, 31
    optional :plus_skill_exp, :int32, 32
    optional :plus_skill_rarity, :int32, 33
    optional :no_plus_skill_property_bonus, :bool, 34
    repeated :attribute, :string, 35
    map :stack_item_bonus, :string, :float, 36
    map :drop_stack_item_bonus, :string, :float, 37
    optional :open_at, :string, 38
    optional :special_label, :string, 39
    optional :plus_luck, :int32, 40
    optional :weapon_ability_id, :int32, 41
    optional :shield_ability_id, :int32, 42
    optional :point, :int32, 43
    optional :pvp_attribute0, :string, 44
    optional :pvp_attribute1, :string, 45
    optional :pvp_attribute2, :string, 46
    optional :pvp_attribute3, :string, 47
    optional :pvp_attribute4, :string, 48
    repeated :auto_type, :string, 49
  end
  add_message "Master.FangTemplate.StackItemBonus" do
    optional :dummy, :int32, 1
  end
  add_message "Master.ActionSkill" do
    optional :id, :int32, 1
    optional :name, :string, 2
    optional :param, :string, 3
    optional :burst_param, :string, 4
    optional :base_turn, :int32, 5
    optional :level_max, :int32, 6
    optional :skill_level_rate, :int32, 7
    optional :skill_level_rate2, :int32, 8
    optional :desc, :string, 9
    optional :burst_desc, :string, 10
    optional :desc2, :string, 11
    optional :burst_desc2, :string, 12
    optional :memo1, :string, 13
    optional :memo2, :string, 14
  end
  add_message "Master.PassiveSkill" do
    optional :id, :int32, 1
    optional :name, :string, 2
    optional :is_json, :bool, 3
    optional :type, :string, 4
    optional :param, :string, 5
    optional :pow, :int32, 6
    optional :burst_param, :string, 7
    optional :burst_pow, :int32, 8
    optional :pvp_soul_no, :int32, 9
    optional :desc, :string, 10
    optional :burst_desc, :string, 11
    optional :desc2, :string, 12
    optional :burst_desc2, :string, 13
    optional :memo1, :string, 14
    optional :memo2, :string, 15
  end
  add_message "Master.PvpSkill" do
    optional :id, :int32, 1
    optional :name, :string, 2
    optional :param, :string, 3
    optional :charge, :int32, 4
    optional :charge_turn, :int32, 5
    optional :skill_type_icon, :string, 6
    optional :skill_type, :string, 7
    optional :give_target, :string, 8
    optional :give_amount, :int32, 9
    optional :desc, :string, 10
    optional :desc2, :string, 11
    optional :memo1, :string, 12
  end
  add_message "Master.PvpSoul" do
    optional :id, :int32, 1
    optional :name, :string, 2
    optional :param, :string, 3
    optional :target, :string, 4
    optional :prob, :int32, 5
    optional :is_jewel, :bool, 6
    optional :desc, :string, 7
    optional :desc2, :string, 8
    optional :game_desc, :string, 9
  end
  add_message "Master.PvpAttribute" do
    optional :id, :string, 1
    optional :name, :string, 2
    optional :desc, :string, 3
    optional :image, :string, 4
  end
  add_message "Master.HomeLevel" do
    optional :level, :int32, 1
    optional :exp, :int32, 2
    optional :stamina_max, :int32, 3
    optional :cost_max, :int32, 4
    optional :image_base, :int32, 5
    optional :image_object, :int32, 6
  end
  add_message "Master.MonsterLevel" do
    optional :level, :int32, 1
    optional :exp, :int32, 2
    optional :dummy, :int32, 3
  end
  add_message "Master.FangDrop" do
    optional :id, :int32, 1
    optional :enemy_id0, :string, 2
    optional :level0, :int32, 3
    optional :rate0, :int32, 4
    optional :enemy_id1, :string, 5
    optional :level1, :int32, 6
    optional :rate1, :int32, 7
    optional :enemy_id2, :string, 8
    optional :level2, :int32, 9
    optional :rate2, :int32, 10
    optional :enemy_id3, :string, 11
    optional :level3, :int32, 12
    optional :rate3, :int32, 13
    optional :enemy_id4, :string, 14
    optional :level4, :int32, 15
    optional :rate4, :int32, 16
  end
  add_message "Master.LimitBreakType" do
    optional :id, :string, 1
    optional :name, :string, 2
    repeated :hp, :int32, 3
    repeated :attack, :int32, 4
    repeated :defense, :int32, 5
    repeated :items0, :int32, 6
    repeated :items1, :int32, 7
    repeated :items2, :int32, 8
    repeated :items3, :int32, 9
    repeated :items4, :int32, 10
    repeated :items5, :int32, 11
  end
  add_message "Master.StackItemTemplate" do
    optional :id, :int32, 1
    optional :type, :string, 2
    optional :special, :string, 3
    optional :param, :int32, 4
    optional :name, :string, 5
    optional :desc, :string, 6
    optional :order, :int32, 7
  end
  add_message "Master.ExchangeShop" do
    optional :id, :int32, 1
    optional :season, :int32, 2
    optional :name, :string, 3
    optional :stack_item_id, :int32, 4
    optional :desc, :string, 5
    optional :option, :string, 6
  end
  add_message "Master.ExchangeItem" do
    optional :id, :int32, 1
    optional :exchange_shop_id, :int32, 2
    optional :name, :string, 3
    optional :image, :string, 4
    optional :action, :string, 5
    optional :price, :int32, 6
    optional :limit, :int32, 7
  end
  add_message "Master.EmeraldShopItem" do
    optional :id, :string, 1
    optional :name, :string, 2
    optional :desc, :string, 3
    optional :stack_item_id, :int32, 4
    optional :order, :int32, 5
    optional :price, :int32, 6
    optional :require_home_level, :int32, 7
    optional :action, :string, 8
  end
  add_message "Master.PackItem" do
    optional :id, :string, 1
    optional :product_id, :string, 2
    optional :name, :string, 3
    optional :image, :string, 4
    optional :price, :int32, 5
  end
  add_message "Master.PresentTemplate" do
    optional :id, :string, 1
    optional :name, :string, 2
    optional :message, :string, 3
    optional :action, :string, 4
  end
  add_message "Master.PvpLeague" do
    optional :id, :int32, 1
    optional :name, :string, 2
  end
  add_message "Master.PvpGrade" do
    optional :id, :int32, 1
    optional :name, :string, 2
    optional :plate, :int32, 3
    optional :promote_point, :int32, 4
    optional :depromote_point, :int32, 5
    optional :reward, :message, 6, "Master.PresentCommand"
    optional :reward_desc, :string, 7
    optional :matching_up, :int32, 8
    optional :coin_win, :int32, 9
    optional :coin_lose, :int32, 10
  end
  add_message "Master.PvpUnificationRule" do
    optional :id, :int32, 1
    optional :name, :string, 2
    optional :cond, :string, 3
    optional :pvp_soul_no, :int32, 4
    optional :effect, :string, 5
    optional :override_id, :int32, 6
    optional :anywhere, :bool, 7
  end
  add_message "Master.QuestTemplate" do
    optional :id, :int32, 1
    optional :kind, :string, 2
    optional :title, :string, 3
    optional :desc, :string, 4
    optional :cond_stat, :string, 5
    optional :cond_num, :int32, 6
    optional :require_id, :int32, 7
    optional :effect, :int32, 8
    optional :override_url, :string, 9
    optional :jump_anytime, :bool, 10
    optional :reward, :message, 11, "Master.PresentCommand"
  end
  add_message "Master.UserStatTemplate" do
    optional :id, :int32, 1
    optional :name, :string, 2
    optional :desc, :string, 3
    optional :url, :string, 4
  end
  add_message "Master.LoginSheet" do
    optional :id, :string, 1
    optional :name, :string, 2
    optional :order, :int32, 3
    optional :disabled_at, :string, 4
  end
  add_message "Master.LoginBonus" do
    optional :id, :int32, 1
    optional :sheet_id, :string, 2
    optional :message_, :string, 3
    optional :action, :message, 4, "Master.PresentCommand"
  end
  add_message "Master.SpecialCutinOption" do
    optional :id, :string, 1
    optional :title, :string, 2
    optional :message, :string, 3
    optional :move_to, :string, 4
    optional :pose, :int32, 5
    optional :next_url, :string, 6
    optional :option_str, :string, 7
  end
  add_message "Master.SoundList" do
    optional :name, :string, 1
    optional :filename, :string, 2
    optional :volume_type, :string, 3
    optional :volume, :int32, 4
    optional :pitch, :int32, 5
    optional :preload, :bool, 6
    optional :loop, :bool, 7
    optional :destroy_type, :string, 8
    optional :overlap_type, :string, 9
    optional :preload_scene_title, :bool, 10
    optional :preload_scene_home, :bool, 11
    optional :preload_scene_game, :bool, 12
    optional :preload_scene_result, :bool, 13
    optional :preload_scene_pvp, :bool, 14
  end
  add_message "Master.Enemy" do
    optional :id, :int32, 1
    optional :name, :string, 2
    optional :card_id, :int32, 3
    optional :race_type, :string, 4
    optional :attribute, :string, 5
    optional :driver_param, :string, 6
    optional :hit_point, :int32, 7
    optional :agility, :int32, 8
    optional :attack_rate, :int32, 9
    optional :attack_dice, :int32, 10
    optional :attack_count, :int32, 11
    optional :attack_adjust, :int32, 12
    optional :attack_sound_name, :string, 13
    optional :critical_damage_rate, :int32, 14
    optional :enchant_attack_name, :string, 15
    optional :enchant_attack_status_rate, :int32, 16
    optional :enchant_attack_command, :string, 17
    optional :enchant_attack_sound_name, :string, 18
    optional :skill_attack_name, :string, 19
    optional :skill_attack_rate, :int32, 20
    optional :skill_attack_command, :string, 21
    optional :skill_attack_sound_name, :string, 22
    optional :defense_dice, :int32, 23
    optional :defense_count, :int32, 24
    optional :defense_adjust, :int32, 25
    optional :defense_sound_name, :string, 26
    optional :enchant_defense_name, :string, 27
    optional :enchant_defense_status_rate, :int32, 28
    optional :enchant_defense_command, :string, 29
    optional :enchant_defense_sound_name, :string, 30
    optional :critical_lots_count, :int32, 31
    optional :critical_hit_rate, :int32, 32
    optional :experience, :int32, 33
    optional :dead_sound_name, :string, 34
    optional :drop_item255, :string, 35
    optional :drop_fang255, :string, 36
    optional :drop_gold, :string, 37
    optional :sleep_rate, :int32, 38
    optional :deepsleep_rate, :int32, 39
    optional :move_wait_counter, :int32, 40
    optional :move_additonal_tactical_point, :int32, 41
    optional :attack_additional_tactical_point, :int32, 42
    optional :prefab_id, :int32, 43
    optional :property, :string, 44
    optional :extra_data, :string, 45
    optional :have_item_no, :int32, 46
  end
  add_message "Master.Item" do
    optional :id, :int32, 1
    optional :sort_id, :int32, 2
    optional :item_code, :string, 3
    optional :mapchip, :string, 4
    optional :name, :string, 5
    optional :type, :string, 6
    optional :fitting_type, :string, 7
    optional :attribute, :string, 8
    optional :param, :string, 9
    optional :attack_adjust, :int32, 10
    optional :defense_adjust, :int32, 11
    optional :cirtical_hit_rate, :int32, 12
    optional :durability, :int32, 13
    optional :merge_count, :int32, 14
    optional :rarity, :int32, 15
    optional :price, :int32, 16
    optional :sound_name, :string, 17
    optional :is_pickup, :bool, 18
    optional :is_swing, :bool, 19
    optional :is_use, :bool, 20
    optional :is_drop, :bool, 21
    optional :is_exclusive, :bool, 22
    optional :extra_type, :string, 23
    optional :description, :string, 24
    optional :stack_item_id, :int32, 25
    optional :stack_item_num, :int32, 26
    optional :dummy_item_name_no, :int32, 27
    optional :is_in_ex_item, :bool, 28
    optional :is_shot, :bool, 29
  end
  add_message "Master.ItemName" do
    optional :id, :int32, 1
    optional :name, :string, 2
  end
  add_message "Master.ItemNameDict" do
    map :dict, :string, :message, 1, "Master.ItemNameDict.List"
  end
  add_message "Master.ItemNameDict.List" do
    repeated :list, :message, 1, "Master.ItemName"
  end
  add_message "Master.Trap" do
    optional :id, :int32, 1
    optional :trap_code, :string, 3
    optional :name, :string, 2
    optional :driver_name, :string, 4
    optional :driver_parameter, :string, 5
    optional :probability, :int32, 6
    optional :soundName, :string, 7
  end
  add_message "Master.StringData" do
    optional :id, :string, 1
    optional :text, :string, 2
  end
  add_message "Master.SoloDuel" do
    optional :stage_id, :int32, 1
    optional :enemy_no, :int32, 2
    optional :level, :int32, 3
    optional :fang_id, :int32, 4
    optional :hp, :int32, 5
    optional :attack, :int32, 6
    optional :defense, :int32, 7
    optional :exp, :int32, 8
  end
  add_message "Master.RoomInfo" do
    optional :id, :string, 1
    optional :width, :int32, 2
    optional :height, :int32, 3
    optional :attribute, :int32, 4
    optional :direction, :int32, 5
  end
  add_message "Master.EnemyAnim" do
    optional :id, :int32, 1
    optional :attack_distance_id, :int32, 2
    optional :attack_anim_id, :int32, 3
    optional :special_distance_id, :int32, 4
    optional :special_anim_id, :int32, 5
    optional :duration, :float, 6
    optional :height_offset, :int32, 7
  end
  add_message "Master.EnemyAnimDistance" do
    optional :id, :int32, 1
    repeated :table, :int32, 2
  end
  add_message "Master.EnemyAnimSprite" do
    optional :id, :int32, 1
    repeated :table, :string, 2
  end
  add_message "Master.ArmamentTemplate" do
    optional :id, :int32, 1
    optional :name, :string, 2
    optional :rarity, :int32, 3
    optional :kind, :string, 4
    optional :property, :string, 5
    optional :max_level, :int32, 6
    optional :base_hp, :int32, 7
    optional :base_attack, :int32, 8
    optional :base_defense, :int32, 9
    optional :soul_pattern, :string, 10
    optional :open_slot_rate, :int32, 11
    optional :point, :int32, 12
    optional :gold, :int32, 13
    optional :status_distribute, :int32, 14
    optional :image_id, :int32, 15
    optional :hit_effect, :string, 16
  end
  add_message "Master.AbilityTemplate" do
    optional :id, :int32, 1
    optional :name, :string, 2
    optional :rarity, :int32, 3
    optional :type, :string, 4
    optional :base_num, :float, 7
    optional :max_num, :float, 8
    optional :max_level, :int32, 9
    optional :desc, :string, 10
    optional :desc2, :string, 11
    optional :special, :enum, 12, "Master.AbilityTemplate.Special"
    optional :param, :enum, 13, "Master.AbilityTemplate.Param"
    optional :log_text_id, :string, 14
    optional :turn, :int32, 15
    optional :json, :string, 16
    optional :kind, :string, 17
  end
  add_enum "Master.AbilityTemplate.Special" do
    value :NONE_TYPE, 0
    value :ATTACK_UP, 1
    value :ON_ATTACK, 2
    value :ON_KILLED, 3
    value :ATTACK_UP_ABS, 4
    value :DEFENSE_UP, 11
    value :GUARD, 12
    value :PROTECT, 13
    value :ON_DAMAGE, 14
    value :DEFENSE_UP_ABS, 15
  end
  add_enum "Master.AbilityTemplate.Param" do
    value :NONE_TARGET, 0
    value :FIRE, 1
    value :WATER, 2
    value :TREE, 3
    value :LIGHT, 4
    value :DARK, 5
    value :DEMON, 6
    value :GOD, 7
    value :DEMIHUMAN, 8
    value :DRAGON, 9
    value :SPIRIT, 10
    value :HEAL, 11
    value :BURST, 12
    value :CHARGE_SKILLL, 13
    value :SLEEP, 14
    value :CONFUSE, 15
    value :BLIND, 16
    value :BIND, 17
    value :POISON, 18
    value :ACID, 19
    value :SLOW, 20
    value :SLEEP_PARALYSIS, 21
    value :ALL, 22
  end
  add_message "Master.MapAnimation" do
    optional :id, :string, 1
    map :animation, :int32, :message, 2, "Master.MapAnimation.Anim"
    map :eventAnimation, :int32, :message, 3, "Master.MapAnimation.Anim"
  end
  add_message "Master.MapAnimation.Anim" do
    repeated :items, :int32, 1
  end
  add_message "Master.MapIndex" do
    optional :stage_id, :int32, 1
    repeated :filename, :string, 2
  end
  add_message "Master.AreaData" do
    optional :id, :int32, 1
    optional :name, :string, 2
    optional :max_dungeon, :int32, 3
    optional :start_dungeon_id, :int32, 4
    optional :property, :string, 5
    optional :kind, :string, 6
    optional :stack_item_id, :int32, 7
    optional :unlock_stack_item_id, :int32, 8
    optional :unlock_stack_item_num, :int32, 9
    optional :require_stack_item_id, :int32, 10
    optional :unlock_time, :int32, 11
    optional :unlock_home_level, :int32, 12
    optional :exchange_id, :int32, 13
    optional :info_url, :string, 14
    optional :banner_height, :int32, 15
    optional :season, :int32, 16
  end
  add_message "Master.DungeonData" do
    optional :id, :int32, 1
    optional :description, :string, 2
    optional :next_dungeon_id, :int32, 3
    optional :max_stage, :int32, 4
    optional :start_stage_id, :int32, 5
    optional :property, :string, 6
    optional :stamina, :int32, 7
    optional :exp, :int32, 8
    optional :gold_rate, :int32, 9
    optional :step_rate, :int32, 10
    optional :burst_rate, :int32, 11
    optional :max_gold, :int32, 12
    optional :max_exp, :int32, 13
    optional :difficulty, :int32, 14
    optional :recommend_level, :int32, 15
    optional :pvp_unification_type, :int32, 16
    optional :mission, :string, 17
    optional :no_continue, :bool, 18
    optional :stair, :string, 19
    optional :satiety, :int32, 20
    optional :max_satiety, :int32, 21
    optional :button_name, :string, 22
  end
  add_message "Master.StageData" do
    optional :id, :int32, 1
    optional :dungeon_id, :int32, 2
    optional :floor_no, :int32, 3
    optional :enemy_set_id, :int32, 4
    optional :item_set_id, :int32, 5
    optional :trap_set_id, :int32, 6
    optional :goal_set_id, :int32, 7
    optional :goal_count, :int32, 8
    optional :mask_type, :int32, 9
    optional :next_stage_param, :string, 10
    optional :stage_title, :string, 11
    optional :driver_name, :string, 12
    optional :driver_param, :string, 13
    optional :fixed_room_group_id, :string, 14
    optional :random_room_group_id, :string, 15
    optional :seeds, :string, 16
    optional :base_name, :string, 17
    optional :mapchip_name, :string, 18
    optional :animation_name, :string, 19
    optional :texture_name, :string, 20
    optional :bgm_name, :string, 21
    optional :step_sound_name, :string, 22
  end
  add_message "Master.RoomData" do
    optional :group_id, :int32, 1
    optional :tmx_file_name, :string, 2
    optional :enemy_lots_count, :int32, 3
    optional :item_lots_count, :int32, 4
    optional :trap_lots_count, :int32, 5
    optional :width, :int32, 6
    optional :height, :int32, 7
    optional :event_command, :string, 8
    optional :direction, :int32, 9
    optional :attribute, :int32, 10
  end
  add_message "Master.GoalSetData" do
    optional :id, :int32, 1
    repeated :params, :string, 2
  end
  add_message "Master.StageSetItem" do
    optional :id, :string, 1
    optional :num, :int32, 2
  end
  add_message "Master.StageSetList" do
    optional :total, :int32, 1
    repeated :items, :message, 2, "Master.StageSetItem"
  end
  add_message "Master.StageSetData" do
    optional :id, :int32, 1
    repeated :enemy_sets, :message, 2, "Master.StageSetList"
    repeated :item_sets, :message, 3, "Master.StageSetList"
    repeated :trap_sets, :message, 4, "Master.StageSetList"
  end
  add_enum "Master.Property" do
    value :NONE, 0
    value :FIRE, 1
    value :WATER, 2
    value :TREE, 3
    value :LIGHT, 4
    value :DARK, 5
  end
end

module Master
  PbxHeader = Google::Protobuf::DescriptorPool.generated_pool.lookup("Master.PbxHeader").msgclass
  PresentCommand = Google::Protobuf::DescriptorPool.generated_pool.lookup("Master.PresentCommand").msgclass
  PresentCommand::StackItem = Google::Protobuf::DescriptorPool.generated_pool.lookup("Master.PresentCommand.StackItem").msgclass
  PresentCommand::Fang = Google::Protobuf::DescriptorPool.generated_pool.lookup("Master.PresentCommand.Fang").msgclass
  PresentCommand::Armament = Google::Protobuf::DescriptorPool.generated_pool.lookup("Master.PresentCommand.Armament").msgclass
  FangTemplate = Google::Protobuf::DescriptorPool.generated_pool.lookup("Master.FangTemplate").msgclass
  FangTemplate::StackItemBonus = Google::Protobuf::DescriptorPool.generated_pool.lookup("Master.FangTemplate.StackItemBonus").msgclass
  ActionSkill = Google::Protobuf::DescriptorPool.generated_pool.lookup("Master.ActionSkill").msgclass
  PassiveSkill = Google::Protobuf::DescriptorPool.generated_pool.lookup("Master.PassiveSkill").msgclass
  PvpSkill = Google::Protobuf::DescriptorPool.generated_pool.lookup("Master.PvpSkill").msgclass
  PvpSoul = Google::Protobuf::DescriptorPool.generated_pool.lookup("Master.PvpSoul").msgclass
  PvpAttribute = Google::Protobuf::DescriptorPool.generated_pool.lookup("Master.PvpAttribute").msgclass
  HomeLevel = Google::Protobuf::DescriptorPool.generated_pool.lookup("Master.HomeLevel").msgclass
  MonsterLevel = Google::Protobuf::DescriptorPool.generated_pool.lookup("Master.MonsterLevel").msgclass
  FangDrop = Google::Protobuf::DescriptorPool.generated_pool.lookup("Master.FangDrop").msgclass
  LimitBreakType = Google::Protobuf::DescriptorPool.generated_pool.lookup("Master.LimitBreakType").msgclass
  StackItemTemplate = Google::Protobuf::DescriptorPool.generated_pool.lookup("Master.StackItemTemplate").msgclass
  ExchangeShop = Google::Protobuf::DescriptorPool.generated_pool.lookup("Master.ExchangeShop").msgclass
  ExchangeItem = Google::Protobuf::DescriptorPool.generated_pool.lookup("Master.ExchangeItem").msgclass
  EmeraldShopItem = Google::Protobuf::DescriptorPool.generated_pool.lookup("Master.EmeraldShopItem").msgclass
  PackItem = Google::Protobuf::DescriptorPool.generated_pool.lookup("Master.PackItem").msgclass
  PresentTemplate = Google::Protobuf::DescriptorPool.generated_pool.lookup("Master.PresentTemplate").msgclass
  PvpLeague = Google::Protobuf::DescriptorPool.generated_pool.lookup("Master.PvpLeague").msgclass
  PvpGrade = Google::Protobuf::DescriptorPool.generated_pool.lookup("Master.PvpGrade").msgclass
  PvpUnificationRule = Google::Protobuf::DescriptorPool.generated_pool.lookup("Master.PvpUnificationRule").msgclass
  QuestTemplate = Google::Protobuf::DescriptorPool.generated_pool.lookup("Master.QuestTemplate").msgclass
  UserStatTemplate = Google::Protobuf::DescriptorPool.generated_pool.lookup("Master.UserStatTemplate").msgclass
  LoginSheet = Google::Protobuf::DescriptorPool.generated_pool.lookup("Master.LoginSheet").msgclass
  LoginBonus = Google::Protobuf::DescriptorPool.generated_pool.lookup("Master.LoginBonus").msgclass
  SpecialCutinOption = Google::Protobuf::DescriptorPool.generated_pool.lookup("Master.SpecialCutinOption").msgclass
  SoundList = Google::Protobuf::DescriptorPool.generated_pool.lookup("Master.SoundList").msgclass
  Enemy = Google::Protobuf::DescriptorPool.generated_pool.lookup("Master.Enemy").msgclass
  Item = Google::Protobuf::DescriptorPool.generated_pool.lookup("Master.Item").msgclass
  ItemName = Google::Protobuf::DescriptorPool.generated_pool.lookup("Master.ItemName").msgclass
  ItemNameDict = Google::Protobuf::DescriptorPool.generated_pool.lookup("Master.ItemNameDict").msgclass
  ItemNameDict::List = Google::Protobuf::DescriptorPool.generated_pool.lookup("Master.ItemNameDict.List").msgclass
  Trap = Google::Protobuf::DescriptorPool.generated_pool.lookup("Master.Trap").msgclass
  StringData = Google::Protobuf::DescriptorPool.generated_pool.lookup("Master.StringData").msgclass
  SoloDuel = Google::Protobuf::DescriptorPool.generated_pool.lookup("Master.SoloDuel").msgclass
  RoomInfo = Google::Protobuf::DescriptorPool.generated_pool.lookup("Master.RoomInfo").msgclass
  EnemyAnim = Google::Protobuf::DescriptorPool.generated_pool.lookup("Master.EnemyAnim").msgclass
  EnemyAnimDistance = Google::Protobuf::DescriptorPool.generated_pool.lookup("Master.EnemyAnimDistance").msgclass
  EnemyAnimSprite = Google::Protobuf::DescriptorPool.generated_pool.lookup("Master.EnemyAnimSprite").msgclass
  ArmamentTemplate = Google::Protobuf::DescriptorPool.generated_pool.lookup("Master.ArmamentTemplate").msgclass
  AbilityTemplate = Google::Protobuf::DescriptorPool.generated_pool.lookup("Master.AbilityTemplate").msgclass
  AbilityTemplate::Special = Google::Protobuf::DescriptorPool.generated_pool.lookup("Master.AbilityTemplate.Special").enummodule
  AbilityTemplate::Param = Google::Protobuf::DescriptorPool.generated_pool.lookup("Master.AbilityTemplate.Param").enummodule
  MapAnimation = Google::Protobuf::DescriptorPool.generated_pool.lookup("Master.MapAnimation").msgclass
  MapAnimation::Anim = Google::Protobuf::DescriptorPool.generated_pool.lookup("Master.MapAnimation.Anim").msgclass
  MapIndex = Google::Protobuf::DescriptorPool.generated_pool.lookup("Master.MapIndex").msgclass
  AreaData = Google::Protobuf::DescriptorPool.generated_pool.lookup("Master.AreaData").msgclass
  DungeonData = Google::Protobuf::DescriptorPool.generated_pool.lookup("Master.DungeonData").msgclass
  StageData = Google::Protobuf::DescriptorPool.generated_pool.lookup("Master.StageData").msgclass
  RoomData = Google::Protobuf::DescriptorPool.generated_pool.lookup("Master.RoomData").msgclass
  GoalSetData = Google::Protobuf::DescriptorPool.generated_pool.lookup("Master.GoalSetData").msgclass
  StageSetItem = Google::Protobuf::DescriptorPool.generated_pool.lookup("Master.StageSetItem").msgclass
  StageSetList = Google::Protobuf::DescriptorPool.generated_pool.lookup("Master.StageSetList").msgclass
  StageSetData = Google::Protobuf::DescriptorPool.generated_pool.lookup("Master.StageSetData").msgclass
  Property = Google::Protobuf::DescriptorPool.generated_pool.lookup("Master.Property").enummodule
end
