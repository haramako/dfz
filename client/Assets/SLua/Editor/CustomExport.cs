// The MIT License (MIT)

// Copyright 2015 Siney/Pangweiwei siney@yeah.net
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in
// all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
// THE SOFTWARE.

namespace SLua
{
    using System.Collections.Generic;
    using System;

    public class CustomExport
    {
        public static void OnGetAssemblyToGenerateExtensionMethod(out List<string> list) {
            list = new List<string> {
                "Assembly-CSharp",
            };
        }

        public static void OnAddCustomClass(LuaCodeGen.ExportGenericDelegate add)
        {
            add(typeof(System.Func<int>), null);
            add(typeof(System.Action<int, string>), null);
            add(typeof(System.Action<int, Dictionary<int, object>>), null);
            add(typeof(List<int>), "ListInt");
            add(typeof(Dictionary<int, string>), "DictIntStr");
            add(typeof(string), "String");

            // add your custom class here
            // add( type, typename)
            // type is what you want to export
            // typename used for simplify generic type name or rename, like List<int> named to "ListInt", if not a generic type keep typename as null or rename as new type name
        }

        public static void OnAddCustomAssembly(ref List<string> list)
        {
            // add your custom assembly here
            // you can build a dll for 3rd library like ngui titled assembly name "NGUI", put it in Assets folder
            // add its name into list, slua will generate all exported interface automatically for you

            //list.Add("NGUI");
        }

        public static HashSet<string> OnAddCustomNamespace()
        {
            return new HashSet<string>
            {
                //"NLuaTest.Mock"
            };
        }

        // if uselist return a white list, don't check noUseList(black list) again
        public static void OnGetUseList(out List<string> list)
        {
            list = new List<string>
            {
                //"UnityEngine.GameObject",
            };
        }

        public static List<string> FunctionFilterList = new List<string>()
        {
            "UIWidget.showHandles",
            "UIWidget.showHandlesWithMoveTool",
        };
        // black list if white list not given
        public static void OnGetNoUseList(out List<string> list)
        {
            list = new List<string>
        {
            "HideInInspector",
            "ExecuteInEditMode",
            "AddComponentMenu",
            "ContextMenu",
            "RequireComponent",
            "DisallowMultipleComponent",
            "SerializeField",
            "AssemblyIsEditorAssembly",
            "Attribute",
            "Types",
            "UnitySurrogateSelector",
            "TrackedReference",
            "TypeInferenceRules",
            "FFTWindow",
            "RPC",
            "Network",
            "MasterServer",
            "BitStream",
            "HostData",
            "ConnectionTesterStatus",
            "GUI",
            "EventType",
            "EventModifiers",
            "FontStyle",
            "TextAlignment",
            "TextEditor",
            "TextEditorDblClickSnapping",
            "TextGenerator",
            "TextClipping",
            "Gizmos",
             "ADBannerView",
            "ADInterstitialAd",
            "Android",
            "Tizen",
            "jvalue",
            "iPhone",
            "iOS",
            "CalendarIdentifier",
            "CalendarUnit",
            "CalendarUnit",
            "ClusterInput",
            "FullScreenMovieControlMode",
            "FullScreenMovieScalingMode",
            "Handheld",
            "LocalNotification",
            "NotificationServices",
            "RemoteNotificationType",
            "RemoteNotification",
            "SamsungTV",
            "TextureCompressionQuality",
            "TouchScreenKeyboardType",
            "TouchScreenKeyboard",
            "MovieTexture",
            "UnityEngineInternal",
            "Terrain",
            "Tree",
            "SplatPrototype",
            "DetailPrototype",
            "DetailRenderMode",
            "MeshSubsetCombineUtility",
            "AOT",
            "Social",
            "Enumerator",
            "SendMouseEvents",
            "Cursor",
            "Flash",
            "ActionScript",
            "OnRequestRebuild",
            "Ping",
            "ShaderVariantCollection",
            "SimpleJson.Reflection",
            "CoroutineTween",
            "GraphicRebuildTracker",
            "Advertisements",
            "UnityEditor",
			"WSA",
			"EventProvider",
			"Apple",
			"ClusterInput",

				// sawada add
				"FilterMode",
				"TextureWrapMode",
				"NPOTSupport",
				"TextureFormat",
				"CubemapFace",
				"RenderTextureFormat",
				"RenderTextureReadWrite",
				"Rendering_BlendMode",
				"Rendering_BlendOp",
				"Rendering_CompareFunction",
				"Rendering_CullMode",
				"Rendering_ColorWriteMask",
				"Rendering_StencilOp",
				"Security",
				"StackTraceUtility",
				"UnityException",
				"MissingComponentException",
				"UnassignedReferenceException",
				"MissingReferenceException",
				"TextGenerationSettings",
				"Events_PersistentListenerMode",
				"Events_UnityEventCallState",
				"Events_UnityEventBase",
				"Events_UnityEvent",
				"WWW",
				"AsyncOperation",
				"AssetBundleCreateRequest",
				"AssetBundleRequest",
				"Object",
				"AssetBundle",
				"HideFlags",
				"SendMessageOptions",
				"PrimitiveType",
				"Space",
				"LayerMask",
				"RuntimePlatform",
				"SystemLanguage",
				"LogType",
				"DeviceType",
				"SystemInfo",
				"WaitForSeconds",
				"WaitForFixedUpdate",
				"WaitForEndOfFrame",
				"ScriptableObject",
				"ResourceRequest",
				"Resources",
				"ThreadPriority",
				"Profiler",
				"CrashReport",
				"LightType",
				"LightRenderMode",
				"LightShadows",
				"Component",
				"OcclusionArea",
				"OcclusionPortal",
				"FogMode",
				"RenderSettings",
				"ShadowProjection",
				"QualitySettings",
				"CameraClearFlags",
				"DepthTextureMode",
				"TexGenMode",
				"AnisotropicFiltering",
				"BlendWeights",
				"MeshFilter",
				"CombineInstance",
				"MeshTopology",
				"Mesh",
				"BoneWeight",
				"SkinQuality",
				"Renderer",
				"SkinnedMeshRenderer",
				"Flare",
				//"Behaviour",
				"LensFlare",
				"Projector",
				"Skybox",
				"TextMesh",
				"Particle",
				"ParticleEmitter",
				"ParticleAnimator",
				"TrailRenderer",
				"ParticleRenderMode",
				"ParticleRenderer",
				"LineRenderer",
				"MaterialPropertyBlock",
				"RenderBuffer",
				"Graphics",
				"Resolution",
				"LightmapData",
				"LightmapsMode",
				"ColorSpace",
				"LightProbes",
				"LightmapSettings",
				"GeometryUtility",
				"ScreenOrientation",
				"Screen",
				"SleepTimeout",
				"GL",
				"MeshRenderer",
				"StaticBatchingUtility",
				"ImageEffectTransformsToLDR",
				"ImageEffectOpaque",
				//"Texture",
				//"Texture2D",
				"Cubemap",
				"Texture3D",
				"SparseTexture",
				"RenderTexture",
				"TextAnchor",
				"HorizontalWrapMode",
				"VerticalWrapMode",
				"CharacterInfo",
				"Font",
				"UICharInfo",
				"UILineInfo",
				"LOD",
				"LODGroup",
				"GradientColorKey",
				"GradientAlphaKey",
				"Gradient",
				"ScaleMode",
				"FocusType",
				"RectOffset",
				"ImagePosition",
				"Event",
				"KeyCode",
				"LightProbeGroup",
				//"Vector2",
				//"Vector3",
				//"Color",
				//"Color32",
				//"Quaternion",
				//"Rect",
				"Matrix4x4",
				"Bounds",
				"Vector4",
				"Ray",
				"Ray2D",
				"Plane",
				//"Mathf",
				"ParticleSystemRenderMode",
				"ParticleSystemSimulationSpace",
				"ParticleSystem",
				"ParticleSystem_Particle",
				"ParticleSystem_CollisionEvent",
				"ParticleSystemRenderer",
				"TextAsset",
				"Shader",
				"Material",
				"ProceduralProcessorUsage",
				"ProceduralCacheSize",
				"ProceduralLoadingBehavior",
				"ProceduralPropertyType",
				"ProceduralOutputType",
				"ProceduralPropertyDescription",
				"ProceduralMaterial",
				"ProceduralTexture",
				"SpriteAlignment",
				"SpritePackingMode",
				"SpritePackingRotation",
				"SpriteMeshType",
				//"Sprite",
				"SpriteRenderer",
				"Sprites_DataUtility",
				"WWWForm",
				"Caching",
				//"Application",
				"UserAuthorization",
				"RenderingPath",
				"TransparencySortMode",
				//"Camera",
				"ComputeShader",
				"ComputeBufferType",
				"ComputeBuffer",
				//"Debug",
				"Display",
				//"MonoBehaviour",
				"TouchPhase",
				"IMECompositionMode",
				"Touch",
				"DeviceOrientation",
				"AccelerationEvent",
				"Gyroscope",
				"LocationInfo",
				"LocationServiceStatus",
				"LocationService",
				"Compass",
				"Input",
				"Light",
				//"GameObject",
				//"Transform",
				//"Time",
				//"Random",
				"PlayerPrefsException",
				"PlayerPrefs",
				"Motion",
				"ForceMode",
				"Physics",
				"RigidbodyConstraints",
				"Rigidbody",
				"RigidbodyInterpolation",
				"JointMotor",
				"JointSpring",
				"JointLimits",
				"Joint",
				"HingeJoint",
				"SpringJoint",
				"FixedJoint",
				"SoftJointLimit",
				"JointDriveMode",
				"JointProjectionMode",
				"JointDrive",
				"CharacterJoint",
				"ConfigurableJointMotion",
				"RotationDriveMode",
				"ConfigurableJoint",
				"ConstantForce",
				"CollisionDetectionMode",
				"Collider",
				"BoxCollider",
				"SphereCollider",
				"MeshCollider",
				"CapsuleCollider",
				"WheelFrictionCurve",
				"WheelHit",
				"WheelCollider",
				"RaycastHit",
				"PhysicMaterialCombine",
				"PhysicMaterial",
				"ContactPoint",
				"Collision",
				"CollisionFlags",
				"ControllerColliderHit",
				"CharacterController",
				"Cloth",
				"InteractiveCloth",
				"ClothSkinningCoefficient",
				"SkinnedCloth",
				"ClothRenderer",
				"Physics2D",
				"RaycastHit2D",
				"RigidbodyInterpolation2D",
				"RigidbodySleepMode2D",
				"CollisionDetectionMode2D",
				"ForceMode2D",
				"Rigidbody2D",
				"Collider2D",
				"CircleCollider2D",
				"BoxCollider2D",
				"EdgeCollider2D",
				"PolygonCollider2D",
				"ContactPoint2D",
				"Collision2D",
				"JointLimitState2D",
				"JointAngleLimits2D",
				"JointTranslationLimits2D",
				"JointMotor2D",
				"JointSuspension2D",
				"Joint2D",
				"AnchoredJoint2D",
				"SpringJoint2D",
				"DistanceJoint2D",
				"HingeJoint2D",
				"SliderJoint2D",
				"WheelJoint2D",
				"PhysicsMaterial2D",
				"ObstacleAvoidanceType",
				"NavMeshAgent",
				"OffMeshLinkType",
				"OffMeshLinkData",
				"NavMeshHit",
				"NavMeshTriangulation",
				"NavMesh",
				"OffMeshLink",
				"NavMeshPathStatus",
				"NavMeshPath",
				"NavMeshObstacle",
				"AudioSpeakerMode",
				"AudioSettings",
				"AudioType",
				"AudioClip",
				"AudioVelocityUpdateMode",
				"AudioListener",
				"AudioRolloffMode",
				"AudioSource",
				"AudioReverbPreset",
				"AudioReverbZone",
				"AudioLowPassFilter",
				"AudioHighPassFilter",
				"AudioDistortionFilter",
				"AudioEchoFilter",
				"AudioChorusFilter",
				"AudioReverbFilter",
				"Microphone",
				"WebCamFlags",
				"WebCamDevice",
				"WebCamTexture",
				"AnimationClipPair",
				"RuntimeAnimatorController",
				"AnimatorOverrideController",
				"WrapMode",
				"AnimationEvent",
				"AnimationClip",
				"Keyframe",
				"AnimationCurve",
				"PlayMode",
				"QueueMode",
				"AnimationBlendMode",
				"AnimationPlayMode",
				"AnimationCullingType",
				"Animation",
				"AnimationState",
				"AvatarTarget",
				"AvatarIKGoal",
				"AnimationInfo",
				"AnimatorCullingMode",
				"AnimatorUpdateMode",
				"AnimatorStateInfo",
				"AnimatorTransitionInfo",
				"MatchTargetWeightMask",
				"Animator",
				"AnimatorUtility",
				"SkeletonBone",
				"HumanLimit",
				"HumanBone",
				"HumanDescription",
				"AvatarBuilder",
				"HumanBodyBones",
				"Avatar",
				"HumanTrait",
				"DrivenTransformProperties",
				"DrivenRectTransformTracker",
				"RectTransform",
				"RectTransform_Edge",
				"RectTransform_Axis",
				"RectTransformUtility",
				"RenderMode",
				"Canvas",
				"CanvasGroup",
				"UIVertex",
				"CanvasRenderer",

				// Add for Unity5
				"ClusterInputType",
				"ClusterInput",
				"AsyncOperation",
				"AssetBundleCreateRequest",
				"AssetBundleRequest",
				//"Object",
				"AssetBundle",
				"AssetBundleManifest",
				"SendMessageOptions",
				"PrimitiveType",
				"Space",
				//"RuntimePlatform",
				"SystemLanguage",
				"LogType",
				"DeviceType",
				"SystemInfo",
				"WaitForSeconds",
				"WaitForFixedUpdate",
				"WaitForEndOfFrame",
				"CustomYieldInstruction",
				"WaitWhile",
				"WaitUntil",
				"ScriptableObject",
				"ThreadPriority",
				"Profiler",
				"Caching",
				"CrashReport",
				"RenderSettings",
				"QualitySettings",
				//"Component",
				"MeshFilter",
				"Mesh",
				"Renderer",
				"Graphics",
				"Screen",
				"SleepTimeout",
				"GL",
				"MeshRenderer",
				//"Texture",
				//"Texture2D",
				//"Texture3D",
				"RenderTexture",
				//"Behaviour",
				"ReflectionProbe",
				"Rendering.GraphicsSettings",
				"BoundingSphere",
				"CullingGroupEvent",
				"CullingGroup",
				"LayerMask",
				//"Vector2",
				//"Vector3",
				//"Color32",
				//"Quaternion",
				//"Rect",
				//"Matrix4x4",
				//"Bounds",
				//"Vector4",
				"Ray",
				"Ray2D",
				"Plane",
				//"Mathf",
				"Rendering",
				"ResourceRequest",
				//"Resources",
				//"TextAsset",
				"Security",
				//"Shader",
				//"Material",
				"SortingLayer",
				"Rendering_SphericalHarmonicsL2",
				"Sprite",
				"Sprites_DataUtility",
				"Hash128",
				//"WWW",
				"WWWForm",
				"UnityEventQueueSystem",
				"ColorUtility",
				//"Application",
				"UserAuthorization",
				"ApplicationInstallMode",
				"ApplicationSandboxType",
				//"Camera",
				//"Debug",
				"Display",
				//"MonoBehaviour",
				"TouchPhase",
				"TouchType",
				"Touch",
				"LocationInfo",
				"LocationServiceStatus",
				"LocationService",
				"Input",
				"HideFlags",
				//"GameObject",
				//"Transform",
				//"Time",
				//"Random",
				"PlayerPrefsException",
				//"PlayerPrefs",
				"Motion",
				"BillboardAsset",
				"BillboardRenderer",
				"Experimental",
				//"SceneManagement",
				"WindZoneMode",
				"WindZone",
				"DynamicGI",
				"ParticleSystemSortMode",
				"ParticleSystemCollisionQuality",
				"ParticleSystemRenderSpace",
				"ParticleSystemEmissionType",
				"ParticleSystemCurveMode",
				"ParticleSystemShapeType",
				"ParticleSystemMeshShapeType",
				"ParticleSystemAnimationType",
				"ParticleSystemCollisionType",
				"ParticleSystemCollisionMode",
				"ParticleSystemScalingMode",
				"ParticleSystemInheritVelocityMode",
				"ParticleSystem",
				"ParticleCollisionEvent",
				"Particle",
				"ParticleEmitter",
				"EllipsoidParticleEmitter",
				"MeshParticleEmitter",
				"ForceMode",
				"ControllerColliderHit",
				"Collision",
				"CollisionFlags",
				"QueryTriggerInteraction",
				"Rigidbody",
				"Collider",
				"BoxCollider",
				"Collider2D",
				"BoxCollider2D",
				"EffectorSelection2D",
				"Effector2D",
				"AreaEffector2D",
				"BuoyancyEffector2D",
				"PointEffector2D",
				"PlatformEffector2D",
				"SurfaceEffector2D",
				"AudioDataLoadState",
				"AudioConfiguration",
				"AudioSettings",
				"AudioType",
				"AudioCompressionFormat",
				"AudioClipLoadType",
				"AudioClip",
				"AudioListener",
				"AudioSourceCurveType",
				"AudioSource",
				"Audio",
				"AnimationEvent",
				"AnimationClip",
				"Animation",
				"AnimationState",
				"AnimatorControllerParameterType",
				"AnimatorRecorderMode",
				"AnimatorClipInfo",
				"Animator",
				"AnimatorControllerParameter",
				"HumanPose",
				"HumanPoseHandler",
				"Experimental",
				"TextAnchor",
				//"Font",
				"RenderMode",
				//"Event",
				"KeyCode",
				"JsonUtility",
				"VR",
				//"Color",
				"Resolution",
				"RenderBuffer",
				"RenderTargetSetup",
				"RenderingPath",
				"TransparencySortMode",
				"CameraType",
				"CameraClearFlags",
				"ColorSpace",
				"ScreenOrientation",
				"FilterMode",
				//"TextureFormat",
				"MaterialGlobalIlluminationFlags",
				"Rendering",
				"JetBrains",
				"RuntimeInitializeLoadType",
				"StackTraceUtility",
				"UnityException",
				"MissingComponentException",
				"UnassignedReferenceException",
				"MissingReferenceException",
				"StateMachineBehaviour",
				"StackTraceLogType",
				"Events",
				"Assertions",
				"Logger",
        };
        }

    }
}
